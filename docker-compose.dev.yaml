services:
  postgres:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: dhondt-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dhondt-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dhondt-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dhondt-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dhondt-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - PUBLIC_BACKEND_URL=http://localhost:5000
      - BACKEND_URL=http://backend:5000
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - dhondt-network

networks:
  dhondt-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
